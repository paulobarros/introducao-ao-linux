{
  "hash": "2175625b89dce59af2489a786db76b75",
  "result": {
    "markdown": "---\ntitle: \"{{< fa folder-open >}} Diretórios\"\nlang: pt-BR\n---\n\nOs comandos a seguir são essenciais na gestão de diretórios no Linux. Importante lembrar que a maioria dos diretórios dentro do Linux irão requerer permissão de superusuário para que possam ser modificados. Esses diretórios em um servidor são de responsabilidade do adminstrador do sistema e estarão fora do escopo de permissões de um usuário, por esse motivo abordaremos operações comuns que podem ser realizadas na nossa pasta de usuário `/home`.\n\n::: callout-note\n### \n\nAs funções não serão abordadas em detalhes, serão apresentados os usos de caso mais comuns, para maiores informações de cada função acesse a sua respectiva ***man page*** usando o terminal.\n:::\n\n### Diretório de Trabalho\n\n`pwd` - *print working directory*\n\n\n```{default}\npwd\n```\n\n\n    /home/paulo/Documents/SandBox\n\n### Listando conteúdo de diretórios\n\n`ls` - *list directory contents*\n\n![](images/ls.png){fig-align=\"center\" width=\"700\"}\n\nO terminal pode apresentar os resultados com esquemas de cores diferentes a depender do tipo de shell sendo utilizado. De maneira geral, diretórios são destacados com cores (azul neste caso), diferenciando-os de arquivos de texto (branco), imagens (roxo), e arquivos com permissão de execução ou outros formatos especiais (verde).\n\nUtilizando opções é possível modificar o tipo de saída. Por padrão o comando `ls` não exibe arquivos ou diretórios ocultos, isto pode ser alterado utilizando a opção `a`. A opção `l` lista o conteúdo em um formato mais longo e detalhado. É possível combinar opções ou simplesmente listá-las uma após a outra, lembrando sempre de consultar a documentação para o uso de `-` ou `--`. Por exemplo, os dois comandos abaixo retornam o mesmo resultado.\n\n\n```{default}\nls -l -a\nls -la\n```\n\n\n![](images/ls-la.png){fig-align=\"center\" width=\"700\"}\n\nAlgumas opções também possuem uma descrição literal, sendo mais fáceis de lembrar, embora requeiram mais digitação. A opção `a` poderia ser substituida por `all`, essas não podem ser concatenadas e devem ser declaradas separadamente. Nem todas as opções possuem uma forma alternativa no padrão GNU, é sempre bom checar a documentação. O comando abaixo retorna a mesma saída do último que rodamos acima.\n\n\n```{default}\nls -l --all\n```\n\n\n\nÉ possível listar arquivos específicos passando como argumento para o `ls` a extensão do arquivo ou parte do nome por exemplo. O comando abaixo lista todos os arquivos com extensão `.R`, o `*` é um caractere de **expressão regular** que indica para o comando que o objetivo é buscar qualquer nome de arquivo desde que este termine com a extensão desejada. \n\n\n```{default}\nls *.R\n```\n\n\n![](images/ls-ext.png){fig-align=\"center\" width=\"700\"}\n\n```{default}\nls *map*\n```\n\n\n![](images/ls-map.png){fig-align=\"center\" width=\"700\"}\n\nExpressões regulares são muito úteis e utilizadas constantemente em diversos comandos de terminal, falaremos mais em detalhes ao longo do curso. Na imagem abaixo[^1] seguem alguns coringas que podem ser utilizados para otimizar buscas por arquivos e diretórios no sistema.\n\n[^1]: Haeder _et al._, 2010. LPI Linux Certification, Third Edition, O'Reilly Media.p. 101.\n\n![](images/wildcards.png){fig-align=\"center\" height=\"700\"}\n\n",
    "supporting": [
      "folders_files"
    ],
    "filters": [],
    "includes": {}
  }
}