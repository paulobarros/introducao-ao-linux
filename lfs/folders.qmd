---
title: "{{< fa folder-open >}} Diretórios"
lang: pt-BR
---

Os comandos a seguir são essenciais na gestão de diretórios no Linux. Importante lembrar que a maioria dos diretórios dentro do Linux irão requerer permissão de superusuário para que possam ser modificados. Esses diretórios em um servidor são de responsabilidade do adminstrador do sistema e estarão fora do escopo de permissões de um usuário, por esse motivo abordaremos operações comuns que podem ser realizadas na nossa pasta de usuário `/home`.

::: callout-note
### 

As funções não serão abordadas em detalhes, serão apresentados os usos de caso mais comuns, para maiores informações de cada função acesse a sua respectiva ***man page*** usando o terminal.
:::

### Diretório de Trabalho

`pwd` - *print working directory*

```{default}
pwd
```

    /home/paulo/Documents/SandBox

### Listando conteúdo de diretórios

`ls` - *list directory contents*

![](images/ls.png){fig-align="center" width="700"}

O terminal pode apresentar os resultados com esquemas de cores diferentes a depender do tipo de shell sendo utilizado. De maneira geral, diretórios são destacados com cores (azul neste caso), diferenciando-os de arquivos de texto (branco), imagens (roxo), e arquivos com permissão de execução ou outros formatos especiais (verde).

Utilizando opções é possível modificar o tipo de saída. Por padrão o comando `ls` não exibe arquivos ou diretórios ocultos, isto pode ser alterado utilizando a opção `a`. A opção `l` lista o conteúdo em um formato mais longo e detalhado. É possível combinar opções ou simplesmente listá-las uma após a outra, lembrando sempre de consultar a documentação para o uso de `-` ou `--`. Por exemplo, os dois comandos abaixo retornam o mesmo resultado.

```{default}
ls -l -a
ls -la
```

![](images/ls-la.png){fig-align="center" width="700"}

Algumas opções também possuem uma descrição literal, sendo mais fáceis de lembrar, embora requeiram mais digitação. A opção `a` poderia ser substituida por `all`, essas não podem ser concatenadas e devem ser declaradas separadamente. Nem todas as opções possuem uma forma alternativa no padrão GNU, é sempre bom checar a documentação. O comando abaixo retorna a mesma saída do último que rodamos acima.

```{default}
ls -l --all
```


É possível listar arquivos específicos passando como argumento para o `ls` a extensão do arquivo ou parte do nome por exemplo. O comando abaixo lista todos os arquivos com extensão `.R`, o `*` é um caractere de **expressão regular** que indica para o comando que o objetivo é buscar qualquer nome de arquivo desde que este termine com a extensão desejada. 

```{default}
ls *.R
```

![](images/ls-ext.png){fig-align="center" width="700"}
```{default}
ls *map*
```

![](images/ls-map.png){fig-align="center" width="700"}

Expressões regulares são muito úteis e utilizadas constantemente em diversos comandos de terminal, falaremos mais em detalhes ao longo do curso. Na imagem abaixo[^1] seguem alguns coringas que podem ser utilizados para otimizar buscas por arquivos e diretórios no sistema.

[^1]: Haeder _et al._, 2010. LPI Linux Certification, Third Edition, O'Reilly Media.p. 101.

![](images/wildcards.png){fig-align="center" height="700"}

